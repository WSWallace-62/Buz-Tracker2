rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Organizations collection - users can create and manage their own organizations
    match /organizations/{orgId} {
      // Allow creating a new organization
      allow create: if request.auth != null && request.resource.data.createdBy == request.auth.uid;

      // Allow reading if user is a member
      allow read: if request.auth != null &&
                      (resource.data.createdBy == request.auth.uid ||
                        request.auth.uid in resource.data.members);

      // Allow updating if user is the owner (createdBy) or has owner role
      allow update: if request.auth != null &&
                      (resource.data.createdBy == request.auth.uid ||
                        (request.auth.uid in resource.data.members &&
                        resource.data.members[request.auth.uid].role == 'owner'));

      // Allow deleting if user is the creator
      allow delete: if request.auth != null && resource.data.createdBy == request.auth.uid;
    }

    // Users can only read and write their own data
    match /users/{userId} {
      allow read, write: if request.auth != null && request.auth.uid == userId;

      // Allow users to manage their own projects and sessions
      match /projects/{projectId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /sessions/{sessionId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /customers/{customerId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      match /predefinedNotes/{noteId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
      
      // Allow users to manage their own FCM tokens for push notifications
      match /fcmTokens/{tokenId} {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow users to manage their own running session status
      // This document is specifically for runningSession
      match /status/runningSession {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }

      // Allow users to manage their own configuration settings
      match /config/settings {
        allow read, write: if request.auth != null && request.auth.uid == userId;
      }
    }
  }
}

service firebase.storage {
  match /b/{bucket}/o {
    // Allow authenticated users to upload their own avatars
    match /avatars/{userId} {
      allow write: if request.auth != null && request.auth.uid == userId;
      allow read: if true; // Public read access for avatars
    }
  }
}
